{"version":3,"file":"main.js","mappings":"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","sources":["webpack://package.json/./src/scripts/cards.js","webpack://package.json/./src/components/card.js","webpack://package.json/./src/components/modal.js","webpack://package.json/./src/index.js"],"sourcesContent":["export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];","const cardTemplate = document.querySelector('#card-template').content;\r\nfunction createCard(newCard, callbacks) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  cardElement.querySelector('.card__title').textContent = newCard.name; // Данные карточки\r\n  const cardImages = cardElement.querySelector('.card__image'); // Изображение\r\n  cardImages.src = newCard.link;\r\n  cardImages.alt = newCard.name;\r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); // Удаление карточки\r\n\r\n  deleteButton.addEventListener('click', () => {\r\n    callbacks.handleRemoveCard(cardElement);\r\n  });\r\n\r\n  const likeButton = cardElement.querySelector('.card__like-button'); // Обработчки лайка карточки\r\n  likeButton.addEventListener('click', () => {\r\n    callbacks.handleLikeButton(likeButton);\r\n  });\r\n\r\n  cardImages.addEventListener('click', () => { // Открытие попапа\r\n    callbacks.handleOpenImagePopup(cardImages.src, cardImages.alt);\r\n  });\r\n  \r\n  return cardElement;\r\n}\r\n\r\nfunction handleRemoveCard(cardElement) {  // Функция удаления\r\n  cardElement.remove();\r\n}\r\n\r\nfunction handleLikeButton(likeButton) {  // Функция лайка\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\nexport {createCard, handleRemoveCard, handleLikeButton};","const handleEscKeyUp = (e) => {\r\n  if (e.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened'); // находим открытый попап\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\nexport const openModal = (modal) => {\r\n  modal.classList.add('popup_is-opened')  // добавляем класс открытия попапа\r\n  document.addEventListener('keydown', handleEscKeyUp)  // добавляем слушатель на кнопку Escape\r\n};\r\n\r\nexport const closeModal= (modal) => {\r\n  modal.classList.remove('popup_is-opened') // удалить класс открытия попапа\r\n  document.removeEventListener('keydown', handleEscKeyUp)  // удалить слушатель на кнопку Escape\r\n};\r\n\r\nexport const handleListener = (popupElement) => {\r\n  popupElement.classList.add('popup_is-animated');\r\n  const closeButton = popupElement.querySelectorAll('.popup__close') // ищем кнопку крестик в попапе\r\n  closeButton.forEach((button) => {\r\n  button.addEventListener('click', () => {\r\n    const popup = button.closest('.popup');\r\n    closeModal(popup);\r\n    });\r\n  });  \r\n\r\n  popupElement.addEventListener('mousedown', (event) => {\r\n    if(event.target.classList.contains('popup')) {\r\n      closeModal(popupElement); // если event.target содержит класс \"popup\", то закрываем\r\n    }\r\n  });\r\n}","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\nimport './pages/index.css';\r\nimport { initialCards } from './scripts/cards.js';\r\nimport { createCard, handleRemoveCard, handleLikeButton } from './components/card.js';\r\nimport { openModal, closeModal, handleListener } from './components/modal.js';\r\n\r\nconst cardList = document.querySelector('.places__list');\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupFullImage = document.querySelector('.popup_type_image');\r\nconst buttonOpenPopupProfile = document.querySelector('.profile__edit-button');\r\nconst buttonOpenPopupAddNewCard = document.querySelector('.profile__add-button');\r\nconst popupImage = popupFullImage.querySelector('.popup__image');\r\nconst popupCaptionImage = popupFullImage.querySelector('.popup__caption');\r\nconst formProfile = document.forms['edit-profile'];\r\nconst imputName = formProfile.elements.name;\r\nimputName.setAttribute('id', 'inputNameFormProfile');\r\nconst formName = imputName;\r\nconst inputDescription = formProfile.elements.description;\r\ninputDescription.setAttribute('id', 'inputDescriptionFormProfile');\r\nconst formDescription = inputDescription;\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst formAddNewCard = document.forms['new-place'];\r\nconst cardImages = document.querySelectorAll('.card__image');\r\n\r\n\r\n// Попапы для форм\r\nhandleListener(popupProfile);\r\nhandleListener(popupAddNewCard);\r\nhandleListener(popupFullImage);\r\n\r\nfunction handleOpenImagePopup(src, alt) { // попап для изображения карточки\r\n  popupImage.src = src;\r\n  popupImage.alt = alt;\r\n  popupCaptionImage.textContent = alt;\r\n  \r\n  openModal(popupFullImage);\r\n  }\r\n\r\nconst callbacks = {\r\n  handleRemoveCard,\r\n  handleLikeButton,\r\n  handleOpenImagePopup\r\n};\r\n\r\nfunction handleProfileFormSubmit(evt) { // Функция редактирования профиля\r\n  evt.preventDefault();\r\n  const formName = formProfile.elements.name;\r\n  const formDescription = formProfile.elements.description;\r\n  profileTitle.textContent = formName.value;\r\n  profileDescription.textContent = formDescription.value;\r\n\r\n  closeModal(popupProfile); // закрываем окно после редактирования профиля\r\n}\r\n\r\nfunction handleAddCardSubmit(evt) { // Функция добавления карточки\r\n  evt.preventDefault();\r\n  const name = formAddNewCard.elements['place-name'].value;\r\n  const link = formAddNewCard.elements.link.value;\r\n  const newCardData = { name, link };\r\n  callbacks;\r\n  const newCardElement= createCard(newCardData, callbacks); // само добавление\r\n\r\n  cardList.prepend(newCardElement); // Добавление карточи в начало списка\r\n\r\n  formAddNewCard.reset(); // Сброс формы\r\n\r\n  closeModal(popupAddNewCard);  // закрываем окно после добавления карточки\r\n}\r\n\r\nformProfile.addEventListener('submit', handleProfileFormSubmit);   // Изменение новых данных о пользователе\r\n\r\nbuttonOpenPopupProfile.addEventListener('click', () =>{\r\n  openModal(popupProfile);\r\n  formName.value = profileTitle.textContent;   // Отображения исходного имения пользователя\r\n  formDescription.value = profileDescription.textContent;   // Отображение исходного занятия пользователя\r\n});\r\n\r\nformAddNewCard.addEventListener('submit', handleAddCardSubmit); // Добавление новой карточки в начало списка\r\n\r\nbuttonOpenPopupAddNewCard.addEventListener('click', () =>{\r\n  openModal(popupAddNewCard);\r\n});\r\n\r\n\r\ninitialCards.forEach(item => { // Отображение карочек на экране\r\n  const card = createCard(item, callbacks);\r\n  cardList.append(card);\r\n});\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","newCard","callbacks","cardElement","cloneNode","textContent","name","cardImages","src","link","alt","addEventListener","handleRemoveCard","likeButton","handleLikeButton","handleOpenImagePopup","handleEscKeyUp","e","key","popup","closeModal","openModal","modal","classList","add","remove","removeEventListener","handleListener","popupElement","querySelectorAll","forEach","button","closest","event","target","contains","cardList","popupProfile","popupAddNewCard","popupFullImage","buttonOpenPopupProfile","buttonOpenPopupAddNewCard","popupImage","popupCaptionImage","formProfile","forms","imputName","elements","setAttribute","formName","inputDescription","description","formDescription","profileTitle","profileDescription","formAddNewCard","toggle","evt","preventDefault","value","newCardElement","prepend","reset","item","card","append"],"sourceRoot":""}