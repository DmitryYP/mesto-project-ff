{"version":3,"file":"main.js","mappings":"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","sources":["webpack://package.json/./src/scripts/api.js","webpack://package.json/./src/components/card.js","webpack://package.json/./src/components/modal.js","webpack://package.json/./src/scripts/validation.js","webpack://package.json/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',\r\n  headers: {\r\n    authorization: '0e37d1fc-ba09-49cc-aed6-0aac9e7bf040',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst getResponseData = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nconst getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n    .then(getResponseData);\r\n};\r\n\r\nconst getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n   .then(getResponseData);\r\n};\r\n\r\nconst editProfile = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about })\r\n  }) \r\n  .then(getResponseData);\r\n}\r\n\r\nconst addNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link })\r\n  }) \r\n  .then(getResponseData);\r\n}\r\n\r\nconst deleteNewCard = (cardID) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardID}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n  .then(getResponseData);\r\n}\r\n\r\nconst editAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar })\r\n  })\r\n  .then(getResponseData);\r\n}\r\n\r\nconst likeCardCount = (cardID, like) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardID}`, {\r\n    method: like ? 'PUT' : 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n  .then(getResponseData);\r\n}\r\n\r\nexport { getInitialCards, getProfile, editProfile, addNewCard, deleteNewCard, editAvatar, likeCardCount }","import { likeCardCount, deleteNewCard } from '../scripts/api';\r\nconst likeModifier = \"card__like-button_is-active\"; \r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nfunction createCard(newCard, {handleRemoveCard, handleLikeButton, handleOpenImagePopup}, userId) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  cardElement.querySelector('.card__title').textContent = newCard.name; // Данные карточки\r\n  const cardImages = cardElement.querySelector('.card__image'); // Изображение\r\n  cardImages.src = newCard.link;\r\n  cardImages.alt = newCard.name;\r\n  const deleteButton = cardElement.querySelector('.card__delete-button'); // Кнопка удаления карточки\r\n  const likesCount = cardElement.querySelector('.card__like-count'); // Счётчик лайков(!)\r\n  const likeButton = cardElement.querySelector('.card__like-button');\r\n\r\n  const isLiked = newCard.likes.some((like) => like._id === userId);\r\n  if (isLiked) likeButton.classList.add(likeModifier);\r\n  likesCount.textContent = newCard.likes.length;\r\n\r\n  if (newCard.owner._id === userId && handleRemoveCard) {\r\n    deleteButton.addEventListener('click', () => {\r\n      handleRemoveCard(newCard._id, cardElement);\r\n  });\r\n  } else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n if (handleLikeButton) {\r\n  likeButton.addEventListener('click', () => {  // Слушатель на кнопку лайка\r\n    handleLikeButton(newCard, likeButton, likesCount);\r\n  });\r\n}\r\n\r\n  if (handleOpenImagePopup) {\r\n    cardImages.addEventListener('click', () => \r\n    handleOpenImagePopup(cardImages.src, cardImages.alt)\r\n    );\r\n  }\r\n  \r\n  return cardElement;\r\n}\r\n\r\nfunction handleRemoveCard(newCardId, cardElement) {\r\n  deleteNewCard(newCardId)\r\n    .then(() => {\r\n      cardElement.remove();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\n\r\nfunction handleLikeButton(newCard, likeButton, likesCount) {\r\n  const cardId = newCard._id; // Идентификатор карточки!!\r\n  const isLiked = likeButton.classList.contains(likeModifier); // Текущий статус лайка\r\n\r\n  likeCardCount(cardId, !isLiked)\r\n    .then((cardData) => {\r\n      likeButton.classList.toggle(likeModifier); // Обновляем КЛАСС лайка\r\n      likesCount.textContent = cardData.likes.length; // // Обновляем СЧЁТЧИК лайков\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport {createCard, handleRemoveCard, handleLikeButton};","const handleEscKeyUp = (e) => {\r\n  if (e.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened'); // находим открытый попап\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\nexport const openModal = (modal) => {\r\n  modal.classList.add('popup_is-opened')  // добавляем класс открытия попапа\r\n  document.addEventListener('keydown', handleEscKeyUp)  // добавляем слушатель на кнопку Escape\r\n};\r\n\r\nexport const closeModal= (modal) => {\r\n  modal.classList.remove('popup_is-opened') // удалить класс открытия попапа\r\n  document.removeEventListener('keydown', handleEscKeyUp)  // удалить слушатель на кнопку Escape\r\n};\r\n\r\nexport const handleListener = (popupElement) => {\r\n  popupElement.classList.add('popup_is-animated');\r\n  const closeButton = popupElement.querySelectorAll('.popup__close') // ищем кнопку крестик в попапе\r\n  closeButton.forEach((button) => {\r\n  button.addEventListener('click', () => {\r\n    const popup = button.closest('.popup');\r\n    closeModal(popup);\r\n    });\r\n  });  \r\n\r\n  popupElement.addEventListener('mousedown', (event) => {\r\n    if(event.target.classList.contains('popup')) {\r\n      closeModal(popupElement); // если event.target содержит класс \"popup\", то закрываем\r\n    }\r\n  });\r\n}","// Функция очистки валидации + неактивная кнопка\r\nconst disableButton = (buttonElement, validationConfig) => {   // Функция деактивации кнопки\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n};\r\n\r\nconst enableButton = (buttonElement, validationConfig) => {   // Функция активации кнопки\r\n  buttonElement.disabled = false;\r\n  buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n};\r\n\r\nfunction clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig)\r\n  });\r\n\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  disableButton(buttonElement, validationConfig);\r\n}\r\n\r\n// Функция добавления класса ошибки\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n// Функция снятия класса ошибки\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n// Функция проверки валидности\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);  // проверка на соответствие данных pattern\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid\r\n  })\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    disableButton(buttonElement, validationConfig);\r\n  } else {\r\n    enableButton(buttonElement, validationConfig);\r\n  }\r\n};\r\n\r\n// Функция слушателя событий\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  })\r\n}\r\n\r\nexport {clearValidation, enableValidation}","// @todo: Темплейт карточки\r\n\r\n// @todo: DOM узлы\r\n\r\n// @todo: Функция создания карточки\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// @todo: Вывести карточки на страницу\r\nimport './pages/index.css';\r\nimport { createCard, handleRemoveCard, handleLikeButton } from './components/card.js';\r\nimport { openModal, closeModal, handleListener } from './components/modal.js';\r\nimport { clearValidation, enableValidation } from './scripts/validation.js';\r\nimport { getInitialCards, getProfile, editProfile, addNewCard, deleteNewCard, editAvatar, likeCardCount } from './scripts/api.js';\r\n\r\nconst cardList = document.querySelector('.places__list');\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupFullImage = document.querySelector('.popup_type_image');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst buttonOpenPopupProfile = document.querySelector('.profile__edit-button');\r\nconst buttonOpenPopupAddNewCard = document.querySelector('.profile__add-button');\r\nconst popupImage = popupFullImage.querySelector('.popup__image');\r\nconst popupCaptionImage = popupFullImage.querySelector('.popup__caption');\r\nconst formProfile = document.forms['edit-profile'];\r\nconst imputName = formProfile.elements.name;\r\nimputName.setAttribute('id', 'input_name');\r\nconst formName = imputName;\r\nconst inputDescription = formProfile.elements.description;\r\ninputDescription.setAttribute('id', 'input_description');\r\nconst formDescription = inputDescription;\r\nconst formAvatar = document.forms['avatar'];\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst formAddNewCard = document.forms['new-place'];\r\nconst cardImages = document.querySelectorAll('.card__image');\r\nconst submitButton = formAddNewCard.querySelector('.popup__button');\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\nlet userId = null;\r\n\r\nenableValidation(validationConfig);\r\n// Попапы для форм\r\nhandleListener(popupProfile);\r\nhandleListener(popupAddNewCard);\r\nhandleListener(popupFullImage);\r\nhandleListener(popupAvatar);\r\n\r\n\r\nfunction handleOpenImagePopup(src, alt) { // попап для изображения карточки\r\n  popupImage.src = src;\r\n  popupImage.alt = alt;\r\n  popupCaptionImage.textContent = alt;\r\n  \r\n  openModal(popupFullImage);\r\n  }\r\n\r\nfunction handleProfileFormSubmit(evt) { // Функция редактирования профиля\r\n  evt.preventDefault();\r\n  const formName = formProfile.elements.name;\r\n  const formDescription = formProfile.elements.description;\r\n  const newName = formName.value;\r\n  const newAbout = formDescription.value;\r\n  const submitButton = formProfile.querySelector('.popup__button');\r\n  submitButton.textContent = 'Сохранение...';\r\n  editProfile(newName, newAbout)\r\n    .then(updatedUser => {\r\n      profileTitle.textContent = updatedUser.name;\r\n      profileDescription.textContent = updatedUser.about;\r\n      closeModal(popupProfile);  // закрываем окно после редактирования профиля\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      submitButton.textContent = 'Ошибка сохранения';\r\n    })\r\n    .finally(() => {\r\n      submitButton.textContent = 'Сохранить';\r\n    });\r\n}\r\n\r\nfunction handleAddCardSubmit(evt) { // Функция добавления карточки\r\n  evt.preventDefault();\r\n  const name = formAddNewCard.elements['place-name'].value;\r\n  const link = formAddNewCard.elements.link.value;\r\n  const submitButton = formAddNewCard.querySelector('.popup__button');\r\n  const newCardData = { name, link };\r\n  addNewCard(name, link)\r\n    .then(newCardData => {\r\n      const newCardElement = createCard(newCardData, {handleRemoveCard, handleLikeButton, handleOpenImagePopup}, userId); // Создание карточки\r\n      cardList.prepend(newCardElement); // Добавление в начало списка\r\n      formAddNewCard.reset(); // Сброс формы\r\n      closeModal(popupAddNewCard);\r\n    })\r\n    .catch(err => {\r\n      console.error('Ошибка при добавлении карточки:', err);\r\n      submitButton.textContent = 'Ошибка сохранения';\r\n    })\r\n    .finally(() => {\r\n    submitButton.textContent = 'Создать';\r\n    });\r\n}\r\n\r\nfunction handleAvatarSubmit(evt) { //функция изменения аватара\r\n  evt.preventDefault();\r\n  const formAvatarInput = formAvatar.elements['link'];\r\n  const avatarLink = formAvatarInput.value;\r\n  const submitButton = formAvatar.querySelector('.popup__button');\r\n  submitButton.textContent = 'Сохранение...';\r\n  editAvatar(avatarLink)\r\n    .then(updatedUser => {\r\n      profileAvatar.style.backgroundImage = `url(${updatedUser.avatar})`;  // По скольку базовая картинка в div'e и есть свойство backgroundImage. Обновление аватара происходит так. В противном случае обновляется только при перезагрузке страницы\r\n      formAvatar.reset();\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      submitButton.textContent = 'Сохранить';\r\n    });\r\n}\r\n\r\nformProfile.addEventListener('submit', handleProfileFormSubmit);   // Изменение новых данных о пользователе\r\n\r\nbuttonOpenPopupProfile.addEventListener('click', () =>{\r\n  openModal(popupProfile);\r\n  formName.value = profileTitle.textContent;   // Отображения исходного имения пользователя\r\n  formDescription.value = profileDescription.textContent;   // Отображение исходного занятия пользователя\r\n  clearValidation(formProfile, validationConfig);\r\n});\r\n\r\nformAddNewCard.addEventListener('submit', handleAddCardSubmit); // Добавление новой карточки в начало списка\r\n\r\nbuttonOpenPopupAddNewCard.addEventListener('click', () =>{\r\n  formAddNewCard.reset();   // Чистая форма при открытии попапа добавления карточки\r\n  openModal(popupAddNewCard);\r\n  submitButton.textContent = 'Создать';\r\n  clearValidation(formAddNewCard, validationConfig);\r\n});\r\n\r\nformAvatar.addEventListener('submit', handleAvatarSubmit);  // Изменение аватара\r\n\r\nprofileAvatar.addEventListener('click', () =>{\r\n  openModal(popupAvatar);\r\n  clearValidation(formAvatar, validationConfig);\r\n});\r\n\r\nPromise.all([getInitialCards(), getProfile()])\r\n  .then(([cards, userData]) => {\r\n    userId = userData._id;\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\r\n\r\n    cards.forEach(newCard => {\r\n       const card = createCard(newCard, {handleRemoveCard, handleLikeButton, handleOpenImagePopup}, userId);\r\n       cardList.append(card);\r\n       });\r\n       console.log(cards)\r\n    })\r\n  .catch((err) => {\r\n      console.log(err);\r\n   });"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","likeModifier","cardTemplate","document","querySelector","content","createCard","newCard","_ref","userId","handleRemoveCard","handleLikeButton","handleOpenImagePopup","cardElement","cloneNode","textContent","name","cardImages","src","link","alt","deleteButton","likesCount","likeButton","likes","some","like","_id","classList","add","length","owner","addEventListener","remove","newCardId","cardID","fetch","method","then","catch","err","console","log","contains","cardData","toggle","handleEscKeyUp","e","key","popup","closeModal","openModal","modal","removeEventListener","handleListener","popupElement","querySelectorAll","forEach","button","closest","event","target","disableButton","buttonElement","validationConfig","disabled","inactiveButtonClass","clearValidation","formElement","Array","from","inputSelector","inputElement","hideInputError","submitButtonSelector","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","enableButton","cardList","popupProfile","popupAddNewCard","popupFullImage","popupAvatar","buttonOpenPopupProfile","buttonOpenPopupAddNewCard","popupImage","popupCaptionImage","formProfile","forms","imputName","elements","setAttribute","formName","inputDescription","description","formDescription","formAvatar","profileTitle","profileDescription","profileAvatar","formAddNewCard","submitButton","formSelector","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","evt","preventDefault","about","newName","value","newAbout","body","JSON","stringify","updatedUser","finally","addNewCard","newCardData","newCardElement","prepend","reset","error","avatar","avatarLink","style","backgroundImage","all","_ref2","cards","userData","card","append"],"sourceRoot":""}